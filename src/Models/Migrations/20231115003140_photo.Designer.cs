// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhotoCli.Models;

#nullable disable

namespace PhotoCli.Migrations
{
    [DbContext(typeof(ArchiveDbContext))]
    [Migration("20231115003140_photo")]
    partial class photo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("PhotoCli.Models.PhotoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address4")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address5")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address6")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address7")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address8")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateTaken")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Hour")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<int?>("Minute")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReverseGeocodeFormatted")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Seconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sha1Hash")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DateTaken");

                    b.HasIndex("ReverseGeocodeFormatted");

                    b.HasIndex("Year");

                    b.HasIndex("Year", "Month");

                    b.HasIndex("Year", "Month", "Day");

                    b.ToTable("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
